# INQ Dataverse API Client Secrets - Environment Variables Example
# 
# IMPORTANT: Do NOT store actual secrets in .env.local or any project files!
# This file is for documentation purposes only.
#
# For security, set these as environment variables outside the project:
# - In your shell: export INQ_CLIENT_SECRET_DEV="your_secret"
# - In production: Use AWS Systems Manager Parameter Store, Azure Key Vault, etc.
# - In CI/CD: Set as encrypted environment variables

# Development Environment
# INQ_CLIENT_SECRET_DEV=your_dev_client_secret_here

# Test Environment  
# INQ_CLIENT_SECRET_TEST=your_test_client_secret_here

# Staging Environment
# INQ_CLIENT_SECRET_STAGE=your_stage_client_secret_here

# Production Environment
# INQ_CLIENT_SECRET_PROD=your_prod_client_secret_here

# Setup Instructions:
# 1. Do NOT uncomment the lines above or add actual secrets to any .env file
# 2. Set environment variables in your shell or deployment environment:
#    export INQ_CLIENT_SECRET_DEV="actual_secret_value"
# 3. For local development, you can set them in your terminal session
# 4. For production, use proper secret management (AWS Secrets Manager, etc.)
# 5. Contact your Azure AD administrator for the actual client secret values

# Why not .env.local?
# - .env.local files can be accidentally committed
# - AI coding assistants can read project files including secrets
# - Environment variables are more secure and proper for secret management
